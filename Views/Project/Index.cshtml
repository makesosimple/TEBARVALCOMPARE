@{
    ViewData["Title"] = "Proje Yönetimi";
}

@section Scripts
{
    <!-- Table Script -->
    <script type="text/javascript">

        $(document).ready(function () {
            /* Primary Buttons for Project Table */
            $.fn.dataTable.ext.buttons.map = {
                className: 'btn btn-success border-0',

                action: function (e, dt, node, config) {
                    window.location = '/ProjectMap';
                }
            };

            $.fn.dataTable.ext.buttons.columnVis = {
                className: 'btn btn-success border-0',
                action: function (e, dt, node, config) {
                    $("#columnModal").modal('show');
                }
            };

            let table = $("#dataTable").DataTable({
                "dom": '<"top d-flex justify-content-start my-2 ml-1"B>rt<"d-flex justify-content-between flex-column align-items-baseline flex-md-row mt-3"ipl><"clear">',
                "scrollX": true,
                "buttons": [
                    {
                        extend: 'map',
                        text: '<i class="fas fa-map-marker-alt"></i>&nbsp;Harita',
                        className: 'bg-success'
                    },
                    {
                        extend: 'columnVis',
                        text: '<i class="fas fa-columns"></i> &nbsp;Kolonlar'
                    },
                    {
                        extend: 'excel',
                        autoFilter: true,
                        text: '<i class="fas fa-file-excel"></i> &nbsp;Excel',
                        className: 'btn btn-success border-0'
                    },
                    {
                        extend: 'pdfHtml5',
                        text: '<i class="fas fa-file-pdf"></i> &nbsp;PDF',
                        className: 'btn btn-success border-0'
                    }
                ],
                "language": {
                    "url": "https://cdn.datatables.net/plug-ins/1.10.25/i18n/Turkish.json",
                },
                "order": [[1, "asc"]],
                "processing": false, // for show progress bar
                "drawCallback": function (settings) {
                    $(".loadingDiv").hide();
                    
                },
                "preDrawCallback": function (settings) {
                    //$('#example tbody').off('click', 'td');
                    $(".dt-buttons").addClass('btn-group');
                    $(".loadingDiv").show();
                },
                "serverSide": true, // for process server side
                "filter": true, // this is for disable filter (search box)
                "orderMulti": false, // for disable multiple column at once
                "ajax": {
                    "url": "/Project/JSONData",
                    "type": "POST"
                },
                "columns": [
                    {
                        "render": function (data, type, row) {

                            var classActive = '';

                            if (row.shortcutID.length > 0) {
                                classActive = 'active';
                            }

                            const icons =
                                `<div class="d-flex align-items-center">
                                            <a href="#" class="dtActionButton" id="gotoFiles"><i class="far fa-folder"></i></a>
                                            <a href="#" class="dtActionButton" id="seeImages"><i class="far fa-image"></i></a>
                                            <a href="#" class="dtActionButton ${classActive}" id="addShortcut" code="${row.projectID}"></i><i class="fas fa-heart"></i></a>
                                          </div>`;


                            return icons;

                        }
                    },
                    {
                        "data": "projectTitle",
                        "autoWidth": true,
                        "render": function (data, type, row) {
                            return '<a href="/Project/Edit/' + row.projectID + '" class="text-truncate" style="max-width: calc(35 * 1vw); display: inline-block; text-overflow: ellipsis;" title="'+data+'">' + data + '</a>';
                        }
                    },
                    {
                        "data": "projectIBBCode",
                        "autoWidth": true,
                    },
                    {
                        "data": "requestingAuthorityID",
                        "autoWidth": true,
                        "render": function (data, type, row) {
                            return row.requestingAuthorityTitle;
                        }
                    },
                    {
                        "data": "responsibleDepartmentID",
                        "autoWidth": true,
                        "render": function (data, type, row) {
                            return row.responsibleDepartmentTitle;
                        }
                    },
                    {
                        "data": "ownerID",
                        "autoWidth": true,
                        "render": function (data, type, row) {
                            return row.ownerFullName;
                        }
                    },
                    {
                        "data": "estimatedProjectCost",
                        "autoWidth": true,
                    },
                    {
                        "data": "serviceAreaID",
                        "autoWidth": true,
                        "render": function (data, type, row) {
                            return row.serviceAreaTitle;
                        }
                    },
                    {
                        "data": "projectStatusID",
                        "render": function (data, type, row) {
                            return `<div class="btn btn-info text-sm">${row.projectStatusTitle}</div>`;
                        },
                        "autoWidth": true
                    },
                    {
                        "data": "projectImportanceID",
                        "render": function (data, type, row) {
                            return `<div class="btn btn-info text-sm">${row.projectImportanceTitle}</div>`;
                        },
                        "autoWidth": true
                    },
                    {
                        "data": null,
                        "render": function (data, type, full, meta, row) {
                            return `<div class="d-flex align-items-center justify-content-end">\
                                                        <a class="btn btn-circle bg-turqoise text-white mr-1" href="/Project/Edit/${full.projectID}"><i class="fas fa-edit"></i></a>\
                                                        <button type="button" class="btn btn-circle bg-warning text-white mr-1" onclick="modalScript(this)" data-url="/Project/Details/${full.projectID}"><i class="fas fa-info-circle"></i></button>\
                                                        <button type="button" class="btn btn-circle bg-danger text-white" onclick="modalScript(this)" data-url="/Project/Delete/${full.projectID}"><i class="fas fa-trash-alt"></i></button>
                                                    </div>`;
                        }
                    },
                ],
                "columnDefs": [
                    { "targets": [-1, 0], "orderable": false },
                ],
                "initComplete": function () {
                    let api = this.api();

                    $('input.searchInput, select.searchInput').on('input', function () {
                        let columnIndex = $(this).data("index");
                        let desiredColumn = api.columns(columnIndex);
                        if (desiredColumn.search() !== this.value) {
                            desiredColumn
                                .search(this.value)
                                .draw();
                        }
                    });

                    $(".dt-buttons").addClass('btn-group');
                    //$(".dt-buttons").show();
                }
            });


            /*$('#dataTable tbody').on('click', '.dtActionButton', function () {
                let data = table.row($(this).parents('tr')).data();
                let action = $(this).attr('id');
                let code = $(this).attr('code');
                if (action == "createFolder") alert(data.code + " kodlu projenin dosyalarÄ± oluÅŸturulmuÅŸtur.");
                else if (action == "seeImages") alert(data.code + " kodlu projenin medyasÄ± indirilmiÅŸtir.");
                else if (action == "seeStatistics") alert(data.code + " kodlu projenin istatistikleri indirilmiÅŸtir.");
                else if (action == "exportProject") alert(data.code + " kodlu proje baÅŸarÄ±yla dÄ±ÅŸarÄ± aktarÄ±lmÄ±ÅŸtÄ±r.");
                else if (action == "addShortcut") addToShortCuts(code);

                $(this).toggleClass('active');
            });*/

            /*
             * Extract Table Headings with their target values for Column Visibility Buttons
             * @@return headingMap: Map
             */
            function getTableHeadings() {
                const headingsRaw = $("#dataTable thead #tableLabels th");
                const headingsMap = new Map();
                for (let i = 0; i < headingsRaw.length; i++) {
                    const currentItem = headingsRaw[i].innerHTML;
                    if (currentItem != undefined && currentItem != "") {
                        headingsMap.set(i, currentItem);
                    }
                }
                return headingsMap;
            }

            /*
             * Construct HTML for Visibility Buttons
             * @@return template: string
             */
            function constructHtmlForColumnVisibility() {
                const headings = getTableHeadings();
                let template = "";
                for (let [key, value] of headings) {
                    template += `
                            <div class="col-12 col-md-6 py-2">
                                <button type="button" class="btn btn-secondary toggleColumn w-100" data-target="${key}" data-activated="false">${value}</button>
                            </div>
                        `;
                }
                return template;
            }

            /*
             * Add Template To String
             * Future notes to developer: It's been 6 hours and I can't cracked the problem of state saving so right now I am marking this
             * to Phase 2(after release). Basic idea of what I am trying to do: I want to keep track of the user's column visibility choice so on future logins,
             * the user won't have to deal with closing columns all over again. Also this is a general property of all the tables in the application, we need to add this structure to a class
             * and generalize it.
            */
            $("#columnModal .modal-body .row").html(constructHtmlForColumnVisibility());

            $(".toggleColumn").on('click', function () {

                const columnState = $(this).data("activated");
                const target = $(this).data("target");
                const columnTargeted = table.column(target);

                console.log(columnState);

                if (!columnState) {
                    $(this).data("activated", true);
                    $(this).removeClass("btn-secondary");
                    $(this).addClass("btn-success");
                }
                else {
                    $(this).removeClass("btn-success");
                    $(this).addClass("btn-secondary");
                    $(this).data("activated", false);
                }

                columnTargeted.visible(!columnTargeted.visible());

            });

        });
    </script>
    <script>
        $('#selectResponsibleDepartment').select2({
            theme: "ibb",
            language: "tr",
            ajax: {
                url: '/Department/JsonSelectData',
                dataType: 'json',
                processResults: function (response) {

                    return {
                        results: response.results,
                    };
                }
            }
        });

        $('#selectRequestingAuthority').select2({
            theme: "ibb",
            language: "tr",
            ajax: {
                url: '/Authority/JsonSelectData',
                dataType: 'json',
                processResults: function (response) {

                    return {
                        results: response.results,
                    };
                }
            }
        });

        $('#selectOwner').select2({
            theme: "ibb",
            language: "tr",
            ajax: {
                url: '/Person/JsonSelectData',
                dataType: 'json',
                processResults: function (response) {

                    return {
                        results: response.results,
                    };
                }
            }
        });

        $('#selectServiceArea').select2({
            theme: "ibb",
            language: "tr",
            ajax: {
                url: '/ServiceArea/JsonSelectData',
                dataType: 'json',
                processResults: function (response) {

                    return {
                        results: response.results,
                    };
                }
            }
        });

        $('#selectProjectStatus').select2({
            theme: "ibb",
            language: "tr",
            ajax: {
                url: '/ProjectStatus/JsonSelectData',
                dataType: 'json',
                processResults: function (response) {

                    return {
                        results: response.results,
                    };
                }
            }
        });

        $('#selectProjectImportance').select2({
            theme: "ibb",
            language: "tr",
            ajax: {
                url: '/ProjectImportance/JsonSelectData',
                dataType: 'json',
                processResults: function (response) {

                    return {
                        results: response.results,
                    };
                }
            }
        });
    </script>

}

<div id="GeneralModal"></div>

<!-- DataTable Column Visibility -->
<div class="modal fade" id="columnModal" tabindex="-1" aria-labelledby="columnModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-dialog-scrollable">
        <div class="modal-content">
            <div class="modal-body">
                <div class="container-fluid">
                    <div class="row">

                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Alert for Exceptions -->
@if (@TempData["ErrorTitle"] is not null)
{
    <div class="alert bg-gradient-danger alert-dismissible fade show border-0" role="alert">
        <h4 class="alert-heading text-white">
            <i class="fas fa-exclamation-circle"></i>
            @TempData["ErrorTitle"]
            <button type="button" class="close text-white" data-dismiss="alert" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
        </h4>
        <p class="text-white">@TempData["ErrorMessage"]</p>
    </div>
}

<!-- Alert for Success -->
@if (@TempData["SuccessTitle"] is not null)
{
    <div class="alert bg-gradient-success alert-dismissible fade show border-0" role="alert">
        <h4 class="alert-heading text-white">
            <i class="fas fa-check"></i>
            @TempData["SuccessTitle"]
            <button type="button" class="close text-white" data-dismiss="alert" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
        </h4>
        <p class="text-white">@TempData["SuccessMessage"]</p>
    </div>
}

<!-- Create Button-->
<div class="row">
    <div class="justify-content-between py-2 col-12 d-flex">
        <h1 class="h3 text-gray-800">@ViewData["Title"]</h1>
        <a asp-action="Create" class="btn btn-success shadow">
            <i class="fas fa-plus mr-2"></i> EKLE
        </a>
    </div>
</div>

<!-- DataTales Example -->
<div class="card shadow mb-4">
    <div class="card-body">
        <div class="loadingDiv" style="background-color: #ffffff;">
            <div class="loadingIcon">
                <p>Yükleniyor...</p>
                <svg version="1.1" id="L2" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
                     viewBox="0 0 100 100" enable-background="new 0 0 100 100" xml:space="preserve">
                <circle fill="none" stroke="#0a1a33" stroke-width="4" stroke-miterlimit="10" cx="50" cy="50" r="48" />
                <line fill="none" stroke-linecap="round" stroke="#0a1a33" stroke-width="4" stroke-miterlimit="10" x1="50" y1="50" x2="85" y2="50.5">
                <animateTransform attributeName="transform"
                                  dur="2s"
                                  type="rotate"
                                  from="0 50 50"
                                  to="360 50 50"
                                  repeatCount="indefinite" />
                            </line>
                <line fill="none" stroke-linecap="round" stroke="#0a1a33" stroke-width="4" stroke-miterlimit="10" x1="50" y1="50" x2="49.5" y2="74">
                <animateTransform attributeName="transform"
                                  dur="15s"
                                  type="rotate"
                                  from="0 50 50"
                                  to="360 50 50"
                                  repeatCount="indefinite" />
                            </line>
                            </svg>
            </div>
        </div>
        <div class="table-responsive position-relative">

            <table class="table table-hover display" id="dataTable" width="100%">
                <thead class="bg-navy-blue">
                    <tr class="filter h-100 bg-white">
                        <th></th>
                        <th scope="col">
                            <input class="form-control w-100 searchInput" data-index="1" type="text" placeholder="Ara..." id="projectIBBCode" name="projectIBBCode" value="" />
                        </th>
                        <th scope="col">
                            <input class="form-control w-100 searchInput" data-index="2" type="text" placeholder="Ara..." id="projectTitle" name="projectTitle" value="" />
                        </th>
                        <th scope="col">
                            <select class="form-control searchInput" data-index="3" id="selectRequestingAuthority" name="selectRequestingAuthority" style="width: 100%;">
                                <option value="" selected>Ara...</option>
                            </select>
                        </th>
                        <th scope="col">
                            <select class="form-control searchInput" data-index="4" id="selectResponsibleDepartment" name="selectResponsibleDepartment" style="width: 100%;">
                                <option value="" selected>Ara...</option>
                            </select>
                        </th>
                        <th scope="col">
                            <select class="form-control searchInput" data-index="5" id="selectOwner" name="selectOwner" style="width: 100%;">
                                <option value="" selected>Ara...</option>
                            </select>
                        </th>
                        <th scope="col">
                            <input class="form-control w-100 searchInput" data-index="6" type="text" placeholder="Ara..." id="estimatedProjectCost" name="estimatedProjectCost" value="" />
                        </th>
                        <th scope="col">
                            <select class="form-control searchInput" data-index="7" id="selectServiceArea" name="selectServiceArea" style="width: 100%;">
                                <option value="" selected>Ara...</option>
                            </select>
                        </th>
                        <th scope="col">
                            <select class="form-control searchInput" data-index="8" id="selectProjectStatus" name="selectProjectStatus" style="width: 100%;">
                                <option value="" selected>Ara...</option>
                            </select>
                        </th>
                        <th scope="col">
                            <select class="form-control searchInput" data-index="9" id="selectProjectImportance" name="selectProjectImportance" style="width: 100%;">
                                <option value="" selected>Ara...</option>
                            </select>
                        </th>
                        <th scope="col"></th>
                    </tr>
                    <tr id="tableLabels">
                        <th></th>
                        <th scope="col" class="text-white text-sm">Proje İsmi</th>
                        <th scope="col" class="text-white text-sm">Proje Kodu</th>
                        <th scope="col" class="text-white text-sm">Talep Eden Makam</th>
                        <th scope="col" class="text-white text-sm">Sorumlu Müdürlük</th>
                        <th scope="col" class="text-white text-sm">Proje Sahibi</th>
                        <th scope="col" class="text-white text-sm">Proje Bedeli</th>
                        <th scope="col" class="text-white text-sm">Hizmet Alanı</th>
                        <th scope="col" class="text-white text-sm">Proje Durumu</th>
                        <th scope="col" class="text-white text-sm">Proje Önemi</th>
                        <th scope="col"></th>
                    </tr>
                </thead>
                <tbody>
                </tbody>
                <tfoot>

                </tfoot>

            </table>
        </div>
    </div>
</div>