// <auto-generated />
using System;
using IBBPortal.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NetTopologySuite.Geometries;

namespace IBBPortal.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20210819141108_IBBPortalSchemaVol3.4")]
    partial class IBBPortalSchemaVol34
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("IBBPortal.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("IBBPortal.Models.Authority", b =>
                {
                    b.Property<int>("AuthorityID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AuthorityDescription")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("AuthorityTitle")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletionDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("AuthorityID");

                    b.HasIndex("UserID");

                    b.ToTable("Authority");
                });

            modelBuilder.Entity("IBBPortal.Models.Board", b =>
                {
                    b.Property<int>("BoardID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BoardDescription")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("BoardTitle")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletionDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("BoardID");

                    b.HasIndex("UserID");

                    b.ToTable("Board");
                });

            modelBuilder.Entity("IBBPortal.Models.City", b =>
                {
                    b.Property<int>("CityID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CityCode")
                        .HasColumnType("int");

                    b.Property<string>("CityName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletionDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("CityID");

                    b.HasIndex("CityCode");

                    b.HasIndex("UserID");

                    b.ToTable("City");
                });

            modelBuilder.Entity("IBBPortal.Models.Contractor", b =>
                {
                    b.Property<int>("ContractorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int?>("CityID")
                        .HasColumnType("int");

                    b.Property<int>("ContractorTypeID")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int?>("DistrictID")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("TaxCode")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("TaxOffice")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Website")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("ContractorID");

                    b.HasIndex("CityID");

                    b.HasIndex("ContractorTypeID");

                    b.HasIndex("DistrictID");

                    b.HasIndex("UserID");

                    b.ToTable("Contractor");
                });

            modelBuilder.Entity("IBBPortal.Models.ContractorType", b =>
                {
                    b.Property<int>("ContractorTypeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ContractorTypeDescription")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ContractorTypeTitle")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletionDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ContractorTypeID");

                    b.HasIndex("UserID");

                    b.ToTable("ContractorType");
                });

            modelBuilder.Entity("IBBPortal.Models.Department", b =>
                {
                    b.Property<int>("DepartmentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DepartmentTitle")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<int?>("ParentDepartmentID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("DepartmentID");

                    b.HasIndex("ParentDepartmentID");

                    b.HasIndex("UserID");

                    b.ToTable("Department");
                });

            modelBuilder.Entity("IBBPortal.Models.District", b =>
                {
                    b.Property<int>("DistrictID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CityID")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletionDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DistrictCode")
                        .HasColumnType("int");

                    b.Property<string>("DistrictName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("DistrictID");

                    b.HasIndex("CityID");

                    b.HasIndex("UserID");

                    b.ToTable("District");
                });

            modelBuilder.Entity("IBBPortal.Models.FileCategory", b =>
                {
                    b.Property<int>("FileCategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FileCategoryDescription")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("FileCategoryFolderName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FileCategoryTitle")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("ParentFileCategoryID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("FileCategoryID");

                    b.HasIndex("ParentFileCategoryID");

                    b.HasIndex("UserID");

                    b.ToTable("FileCategory");
                });

            modelBuilder.Entity("IBBPortal.Models.JobField", b =>
                {
                    b.Property<int>("JobFieldID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("JobFieldDescription")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("JobFieldTitle")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("JobFieldID");

                    b.HasIndex("UserID");

                    b.ToTable("JobField");
                });

            modelBuilder.Entity("IBBPortal.Models.JobTitle", b =>
                {
                    b.Property<int>("JobTitleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("JobDescription")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("JobTitleID");

                    b.HasIndex("UserID");

                    b.ToTable("JobTitle");
                });

            modelBuilder.Entity("IBBPortal.Models.Organization", b =>
                {
                    b.Property<int>("OrganizationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OrganizationDescription")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("OrganizationTitle")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("OrganizationID");

                    b.HasIndex("UserID");

                    b.ToTable("Organization");
                });

            modelBuilder.Entity("IBBPortal.Models.Person", b =>
                {
                    b.Property<int>("PersonID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ContractorID")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletionDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DepartmentID")
                        .HasColumnType("int");

                    b.Property<int?>("JobTitleID")
                        .HasColumnType("int");

                    b.Property<string>("PersonEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PersonName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PersonPhone")
                        .HasMaxLength(24)
                        .HasColumnType("nvarchar(24)");

                    b.Property<string>("PersonSurname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("isInternal")
                        .HasColumnType("bit");

                    b.HasKey("PersonID");

                    b.HasIndex("ContractorID");

                    b.HasIndex("DepartmentID");

                    b.HasIndex("JobTitleID");

                    b.HasIndex("UserID");

                    b.ToTable("Person");
                });

            modelBuilder.Entity("IBBPortal.Models.Phase", b =>
                {
                    b.Property<int>("PhaseID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PhaseDescription")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("PhaseOrder")
                        .HasColumnType("int");

                    b.Property<string>("PhaseTitle")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("PreviousPhaseID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("isPresentation")
                        .HasColumnType("bit");

                    b.HasKey("PhaseID");

                    b.HasIndex("PreviousPhaseID");

                    b.HasIndex("UserID");

                    b.ToTable("Phase");
                });

            modelBuilder.Entity("IBBPortal.Models.Project", b =>
                {
                    b.Property<int>("ProjectID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletionDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DistrictID")
                        .HasColumnType("int");

                    b.Property<bool>("HasRelatedProject")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFeasibilityNeeded")
                        .HasColumnType("bit");

                    b.Property<bool>("IsProjectInIstanbul")
                        .HasColumnType("bit");

                    b.Property<string>("KML")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("ProjectAddress")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<double?>("ProjectArea")
                        .HasColumnType("float");

                    b.Property<string>("ProjectCode")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<double?>("ProjectConstructionArea")
                        .HasColumnType("float");

                    b.Property<decimal?>("ProjectCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProjectIBBCode")
                        .HasColumnType("int");

                    b.Property<int?>("ProjectImportanceID")
                        .HasColumnType("int");

                    b.Property<decimal?>("ProjectLatitude")
                        .HasColumnType("decimal(9,6)");

                    b.Property<LineString>("ProjectLineString")
                        .HasColumnType("geography");

                    b.Property<decimal?>("ProjectLongitude")
                        .HasColumnType("decimal(9,6)");

                    b.Property<int?>("ProjectOwnerPersonID")
                        .HasColumnType("int");

                    b.Property<string>("ProjectPaftaAdaParsel")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<double?>("ProjectPaysageArea")
                        .HasColumnType("float");

                    b.Property<Point>("ProjectPoint")
                        .HasColumnType("geography");

                    b.Property<int?>("ProjectServiceAreaID")
                        .HasColumnType("int");

                    b.Property<string>("ProjectStatusDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<DateTime?>("ProjectStatusDescriptionDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ProjectStatusID")
                        .HasColumnType("int");

                    b.Property<string>("ProjectTitle")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int?>("RequestingDepartmentID")
                        .HasColumnType("int");

                    b.Property<int?>("ResponsibleDepartmentID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ProjectID");

                    b.HasIndex("DistrictID");

                    b.HasIndex("ProjectImportanceID");

                    b.HasIndex("ProjectOwnerPersonID");

                    b.HasIndex("ProjectServiceAreaID");

                    b.HasIndex("ProjectStatusID");

                    b.HasIndex("RequestingDepartmentID");

                    b.HasIndex("ResponsibleDepartmentID");

                    b.HasIndex("UserID");

                    b.ToTable("Project");
                });

            modelBuilder.Entity("IBBPortal.Models.ProjectBoardApproval", b =>
                {
                    b.Property<int>("ProjectBoardApprovalID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BoardID")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletionDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsBoardApprovalNeeded")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ProjectBoardApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProjectBoardApprovalReason")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int?>("ProjectID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ProjectBoardApprovalID");

                    b.HasIndex("BoardID");

                    b.HasIndex("ProjectID");

                    b.HasIndex("UserID");

                    b.ToTable("ProjectBoardApproval");
                });

            modelBuilder.Entity("IBBPortal.Models.ProjectExpropriation", b =>
                {
                    b.Property<int>("ProjectExpropriationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletionDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("ProjectExpropriationCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("ProjectExpropriationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProjectExpropriationDescription")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("ProjectExpropriationStatusDesc")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int?>("ProjectID")
                        .HasColumnType("int");

                    b.Property<bool>("ProjectNeedsExpropriation")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ProjectExpropriationID");

                    b.HasIndex("ProjectID");

                    b.HasIndex("UserID");

                    b.ToTable("ProjectExpropriation");
                });

            modelBuilder.Entity("IBBPortal.Models.ProjectImportance", b =>
                {
                    b.Property<int>("ProjectImportanceID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProjectImportanceDescription")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("ProjectImportanceTitle")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ProjectImportanceID");

                    b.HasIndex("UserID");

                    b.ToTable("ProjectImportance");
                });

            modelBuilder.Entity("IBBPortal.Models.ProjectPermission", b =>
                {
                    b.Property<int>("ProjectPermissionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletionDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsPermissionNeeded")
                        .HasColumnType("bit");

                    b.Property<int?>("ProjectID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ProjectPermissionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProjectPermissionProvider")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("ProjectPermissionReason")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ProjectPermissionID");

                    b.HasIndex("ProjectID");

                    b.ToTable("ProjectPermission");
                });

            modelBuilder.Entity("IBBPortal.Models.ProjectPerson", b =>
                {
                    b.Property<int>("ProjectPersonID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ContractorID")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletionDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsInternal")
                        .HasColumnType("bit");

                    b.Property<int?>("JobFieldID")
                        .HasColumnType("int");

                    b.Property<int?>("JobTitleID")
                        .HasColumnType("int");

                    b.Property<int?>("PersonID")
                        .HasColumnType("int");

                    b.Property<int?>("ProjectID")
                        .HasColumnType("int");

                    b.Property<string>("ProjectPersonDescription")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ProjectPersonID");

                    b.HasIndex("ContractorID");

                    b.HasIndex("JobFieldID");

                    b.HasIndex("JobTitleID");

                    b.HasIndex("PersonID");

                    b.HasIndex("ProjectID");

                    b.HasIndex("UserID");

                    b.ToTable("ProjectPerson");
                });

            modelBuilder.Entity("IBBPortal.Models.ProjectPhaseStatus", b =>
                {
                    b.Property<int>("ProjectPhaseStatusID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProjectPhaseStatusDescription")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("ProjectPhaseStatusTitle")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ProjectPhaseStatusID");

                    b.HasIndex("UserID");

                    b.ToTable("ProjectPhaseStatus");
                });

            modelBuilder.Entity("IBBPortal.Models.ProjectRelation", b =>
                {
                    b.Property<int>("ProjectRelationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletionDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ProjectID")
                        .HasColumnType("int");

                    b.Property<string>("ProjectRelationDescription")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int?>("RelatedProjectID")
                        .HasColumnType("int");

                    b.Property<int?>("RelationTypeID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ProjectRelationID");

                    b.HasIndex("ProjectID");

                    b.HasIndex("RelatedProjectID");

                    b.HasIndex("RelationTypeID");

                    b.HasIndex("UserID");

                    b.ToTable("ProjectRelation");
                });

            modelBuilder.Entity("IBBPortal.Models.ProjectStatus", b =>
                {
                    b.Property<int>("ProjectStatusID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProjectStatusDescription")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("ProjectStatusTitle")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ProjectStatusID");

                    b.HasIndex("UserID");

                    b.ToTable("ProjectStatus");
                });

            modelBuilder.Entity("IBBPortal.Models.ProjectTeamCategory", b =>
                {
                    b.Property<int>("ProjectTeamCategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProjectTeamCategoryDescription")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ProjectTeamCategoryTitle")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ProjectTeamCategoryID");

                    b.HasIndex("UserID");

                    b.ToTable("ProjectTeamCategory");
                });

            modelBuilder.Entity("IBBPortal.Models.ProjectZoningPlan", b =>
                {
                    b.Property<int>("ProjectZoningPlanID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletionDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModificationApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModificationProposalDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ProjectID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("ZoningPlanDate1000")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ZoningPlanDate5000")
                        .HasColumnType("datetime2");

                    b.Property<bool>("ZoningPlanModificationNeeded")
                        .HasColumnType("bit");

                    b.Property<string>("ZoningPlanModificationReason")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int?>("ZoningPlanModificationStatusID")
                        .HasColumnType("int");

                    b.Property<int?>("ZoningPlanResponsiblePersonID")
                        .HasColumnType("int");

                    b.Property<int?>("ZoningPlanStatusID1000")
                        .HasColumnType("int");

                    b.Property<int?>("ZoningPlanStatusID5000")
                        .HasColumnType("int");

                    b.HasKey("ProjectZoningPlanID");

                    b.HasIndex("ProjectID");

                    b.HasIndex("UserID");

                    b.HasIndex("ZoningPlanModificationStatusID");

                    b.HasIndex("ZoningPlanResponsiblePersonID");

                    b.HasIndex("ZoningPlanStatusID1000");

                    b.HasIndex("ZoningPlanStatusID5000");

                    b.ToTable("ProjectZoningPlan");
                });

            modelBuilder.Entity("IBBPortal.Models.PropertyStatus", b =>
                {
                    b.Property<int>("PropertyStatusID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PropertyStatusDescription")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PropertyStatusTitle")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("PropertyStatusID");

                    b.HasIndex("UserID");

                    b.ToTable("PropertyStatus");
                });

            modelBuilder.Entity("IBBPortal.Models.RelationType", b =>
                {
                    b.Property<int>("RelationTypeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RelationTypeDescription")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("RelationTypeTitle")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("RelationTypeID");

                    b.HasIndex("UserID");

                    b.ToTable("RelationType");
                });

            modelBuilder.Entity("IBBPortal.Models.ServiceArea", b =>
                {
                    b.Property<int>("ServiceAreaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletionDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ParentServiceAreaID")
                        .HasColumnType("int");

                    b.Property<string>("ServiceAreaDescription")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("ServiceAreaTitle")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ServiceAreaID");

                    b.HasIndex("ParentServiceAreaID");

                    b.HasIndex("UserID");

                    b.ToTable("ServiceArea");
                });

            modelBuilder.Entity("IBBPortal.Models.Subfunction", b =>
                {
                    b.Property<int>("SubfunctionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SubfunctionDescription")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("SubfunctionTitle")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("SubfunctionID");

                    b.HasIndex("UserID");

                    b.ToTable("Subfunction");
                });

            modelBuilder.Entity("IBBPortal.Models.SubfunctionFeature", b =>
                {
                    b.Property<int>("SubfunctionFeatureID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SubfunctionFeatureDescription")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("SubfunctionFeatureTitle")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("SubfunctionID")
                        .HasColumnType("int");

                    b.Property<string>("SubfunctionMeasurementUnit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("SubfunctionFeatureID");

                    b.HasIndex("SubfunctionID");

                    b.HasIndex("UserID");

                    b.ToTable("SubfunctionFeature");
                });

            modelBuilder.Entity("IBBPortal.Models.ZoningPlanModificationStatus", b =>
                {
                    b.Property<int>("ZoningPlanModificationStatusID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletionDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ZoningPlanModificationStatusDescription")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("ZoningPlanModificationStatusTitle")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ZoningPlanModificationStatusID");

                    b.HasIndex("UserID");

                    b.ToTable("ZoningPlanModificationStatus");
                });

            modelBuilder.Entity("IBBPortal.Models.ZoningPlanStatus", b =>
                {
                    b.Property<int>("ZoningPlanStatusID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletionDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ZoningPlanStatusDescription")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("ZoningPlanStatusTitle")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ZoningPlanStatusID");

                    b.HasIndex("UserID");

                    b.ToTable("ZoningPlanStatus");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("ApplicationRole");

                    b.HasDiscriminator<string>("Discriminator").HasValue("IdentityRole");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("ApplicationRoleClaim");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("ApplicationUserClaim");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("ApplicationUserLogin");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("ApplicationUserRole");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("ApplicationUserToken");
                });

            modelBuilder.Entity("IBBPortal.Models.ApplicationRole", b =>
                {
                    b.HasBaseType("Microsoft.AspNetCore.Identity.IdentityRole");

                    b.HasDiscriminator().HasValue("ApplicationRole");
                });

            modelBuilder.Entity("IBBPortal.Models.Authority", b =>
                {
                    b.HasOne("IBBPortal.Models.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserID");

                    b.Navigation("User");
                });

            modelBuilder.Entity("IBBPortal.Models.Board", b =>
                {
                    b.HasOne("IBBPortal.Models.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserID");

                    b.Navigation("User");
                });

            modelBuilder.Entity("IBBPortal.Models.City", b =>
                {
                    b.HasOne("IBBPortal.Models.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserID");

                    b.Navigation("User");
                });

            modelBuilder.Entity("IBBPortal.Models.Contractor", b =>
                {
                    b.HasOne("IBBPortal.Models.City", "City")
                        .WithMany("RelatedContractors")
                        .HasForeignKey("CityID");

                    b.HasOne("IBBPortal.Models.ContractorType", "ContractorType")
                        .WithMany("RelatedContractors")
                        .HasForeignKey("ContractorTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IBBPortal.Models.District", "District")
                        .WithMany("RelatedContractors")
                        .HasForeignKey("DistrictID");

                    b.HasOne("IBBPortal.Models.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserID");

                    b.Navigation("City");

                    b.Navigation("ContractorType");

                    b.Navigation("District");

                    b.Navigation("User");
                });

            modelBuilder.Entity("IBBPortal.Models.ContractorType", b =>
                {
                    b.HasOne("IBBPortal.Models.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserID");

                    b.Navigation("User");
                });

            modelBuilder.Entity("IBBPortal.Models.Department", b =>
                {
                    b.HasOne("IBBPortal.Models.Department", "ParentDepartment")
                        .WithMany()
                        .HasForeignKey("ParentDepartmentID");

                    b.HasOne("IBBPortal.Models.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserID");

                    b.Navigation("ParentDepartment");

                    b.Navigation("User");
                });

            modelBuilder.Entity("IBBPortal.Models.District", b =>
                {
                    b.HasOne("IBBPortal.Models.City", "City")
                        .WithMany("RelatedDistricts")
                        .HasForeignKey("CityID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IBBPortal.Models.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserID");

                    b.Navigation("City");

                    b.Navigation("User");
                });

            modelBuilder.Entity("IBBPortal.Models.FileCategory", b =>
                {
                    b.HasOne("IBBPortal.Models.FileCategory", "ParentFileCategory")
                        .WithMany()
                        .HasForeignKey("ParentFileCategoryID");

                    b.HasOne("IBBPortal.Models.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserID");

                    b.Navigation("ParentFileCategory");

                    b.Navigation("User");
                });

            modelBuilder.Entity("IBBPortal.Models.JobField", b =>
                {
                    b.HasOne("IBBPortal.Models.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserID");

                    b.Navigation("User");
                });

            modelBuilder.Entity("IBBPortal.Models.JobTitle", b =>
                {
                    b.HasOne("IBBPortal.Models.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserID");

                    b.Navigation("User");
                });

            modelBuilder.Entity("IBBPortal.Models.Organization", b =>
                {
                    b.HasOne("IBBPortal.Models.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserID");

                    b.Navigation("User");
                });

            modelBuilder.Entity("IBBPortal.Models.Person", b =>
                {
                    b.HasOne("IBBPortal.Models.Contractor", "Contractor")
                        .WithMany("RelatedPeople")
                        .HasForeignKey("ContractorID");

                    b.HasOne("IBBPortal.Models.Department", "Department")
                        .WithMany("RelatedPeople")
                        .HasForeignKey("DepartmentID");

                    b.HasOne("IBBPortal.Models.JobTitle", "JobTitle")
                        .WithMany("RelatedPeople")
                        .HasForeignKey("JobTitleID");

                    b.HasOne("IBBPortal.Models.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserID");

                    b.Navigation("Contractor");

                    b.Navigation("Department");

                    b.Navigation("JobTitle");

                    b.Navigation("User");
                });

            modelBuilder.Entity("IBBPortal.Models.Phase", b =>
                {
                    b.HasOne("IBBPortal.Models.Phase", "PreviousPhase")
                        .WithMany()
                        .HasForeignKey("PreviousPhaseID");

                    b.HasOne("IBBPortal.Models.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserID");

                    b.Navigation("PreviousPhase");

                    b.Navigation("User");
                });

            modelBuilder.Entity("IBBPortal.Models.Project", b =>
                {
                    b.HasOne("IBBPortal.Models.District", "District")
                        .WithMany()
                        .HasForeignKey("DistrictID");

                    b.HasOne("IBBPortal.Models.ProjectImportance", "ProjectImportance")
                        .WithMany("RelatedProjects")
                        .HasForeignKey("ProjectImportanceID");

                    b.HasOne("IBBPortal.Models.Person", "ProjectOwnerPerson")
                        .WithMany("RelatedProjects")
                        .HasForeignKey("ProjectOwnerPersonID");

                    b.HasOne("IBBPortal.Models.ServiceArea", "ProjectServiceArea")
                        .WithMany("RelatedProjects")
                        .HasForeignKey("ProjectServiceAreaID");

                    b.HasOne("IBBPortal.Models.ProjectStatus", "ProjectStatus")
                        .WithMany("RelatedProjects")
                        .HasForeignKey("ProjectStatusID");

                    b.HasOne("IBBPortal.Models.Department", "RequestingDepartment")
                        .WithMany()
                        .HasForeignKey("RequestingDepartmentID");

                    b.HasOne("IBBPortal.Models.Department", "ResponsibleDepartment")
                        .WithMany()
                        .HasForeignKey("ResponsibleDepartmentID");

                    b.HasOne("IBBPortal.Models.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserID");

                    b.Navigation("District");

                    b.Navigation("ProjectImportance");

                    b.Navigation("ProjectOwnerPerson");

                    b.Navigation("ProjectServiceArea");

                    b.Navigation("ProjectStatus");

                    b.Navigation("RequestingDepartment");

                    b.Navigation("ResponsibleDepartment");

                    b.Navigation("User");
                });

            modelBuilder.Entity("IBBPortal.Models.ProjectBoardApproval", b =>
                {
                    b.HasOne("IBBPortal.Models.Board", "Board")
                        .WithMany()
                        .HasForeignKey("BoardID");

                    b.HasOne("IBBPortal.Models.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectID");

                    b.HasOne("IBBPortal.Models.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserID");

                    b.Navigation("Board");

                    b.Navigation("Project");

                    b.Navigation("User");
                });

            modelBuilder.Entity("IBBPortal.Models.ProjectExpropriation", b =>
                {
                    b.HasOne("IBBPortal.Models.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectID");

                    b.HasOne("IBBPortal.Models.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserID");

                    b.Navigation("Project");

                    b.Navigation("User");
                });

            modelBuilder.Entity("IBBPortal.Models.ProjectImportance", b =>
                {
                    b.HasOne("IBBPortal.Models.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserID");

                    b.Navigation("User");
                });

            modelBuilder.Entity("IBBPortal.Models.ProjectPermission", b =>
                {
                    b.HasOne("IBBPortal.Models.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectID");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("IBBPortal.Models.ProjectPerson", b =>
                {
                    b.HasOne("IBBPortal.Models.Contractor", "Contractor")
                        .WithMany()
                        .HasForeignKey("ContractorID");

                    b.HasOne("IBBPortal.Models.JobField", "JobField")
                        .WithMany()
                        .HasForeignKey("JobFieldID");

                    b.HasOne("IBBPortal.Models.JobTitle", "JobTitle")
                        .WithMany()
                        .HasForeignKey("JobTitleID");

                    b.HasOne("IBBPortal.Models.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonID");

                    b.HasOne("IBBPortal.Models.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectID");

                    b.HasOne("IBBPortal.Models.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserID");

                    b.Navigation("Contractor");

                    b.Navigation("JobField");

                    b.Navigation("JobTitle");

                    b.Navigation("Person");

                    b.Navigation("Project");

                    b.Navigation("User");
                });

            modelBuilder.Entity("IBBPortal.Models.ProjectPhaseStatus", b =>
                {
                    b.HasOne("IBBPortal.Models.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserID");

                    b.Navigation("User");
                });

            modelBuilder.Entity("IBBPortal.Models.ProjectRelation", b =>
                {
                    b.HasOne("IBBPortal.Models.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectID");

                    b.HasOne("IBBPortal.Models.Project", "RelatedProject")
                        .WithMany()
                        .HasForeignKey("RelatedProjectID");

                    b.HasOne("IBBPortal.Models.RelationType", "RelationType")
                        .WithMany()
                        .HasForeignKey("RelationTypeID");

                    b.HasOne("IBBPortal.Models.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserID");

                    b.Navigation("Project");

                    b.Navigation("RelatedProject");

                    b.Navigation("RelationType");

                    b.Navigation("User");
                });

            modelBuilder.Entity("IBBPortal.Models.ProjectStatus", b =>
                {
                    b.HasOne("IBBPortal.Models.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserID");

                    b.Navigation("User");
                });

            modelBuilder.Entity("IBBPortal.Models.ProjectTeamCategory", b =>
                {
                    b.HasOne("IBBPortal.Models.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserID");

                    b.Navigation("User");
                });

            modelBuilder.Entity("IBBPortal.Models.ProjectZoningPlan", b =>
                {
                    b.HasOne("IBBPortal.Models.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectID");

                    b.HasOne("IBBPortal.Models.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserID");

                    b.HasOne("IBBPortal.Models.ZoningPlanModificationStatus", "ZoningPlanModificationStatus")
                        .WithMany()
                        .HasForeignKey("ZoningPlanModificationStatusID");

                    b.HasOne("IBBPortal.Models.Person", "ZoningPlanResponsiblePerson")
                        .WithMany()
                        .HasForeignKey("ZoningPlanResponsiblePersonID");

                    b.HasOne("IBBPortal.Models.ZoningPlanStatus", "ZoningPlanStatus1000")
                        .WithMany()
                        .HasForeignKey("ZoningPlanStatusID1000");

                    b.HasOne("IBBPortal.Models.ZoningPlanStatus", "ZoningPlanStatus5000")
                        .WithMany()
                        .HasForeignKey("ZoningPlanStatusID5000");

                    b.Navigation("Project");

                    b.Navigation("User");

                    b.Navigation("ZoningPlanModificationStatus");

                    b.Navigation("ZoningPlanResponsiblePerson");

                    b.Navigation("ZoningPlanStatus1000");

                    b.Navigation("ZoningPlanStatus5000");
                });

            modelBuilder.Entity("IBBPortal.Models.PropertyStatus", b =>
                {
                    b.HasOne("IBBPortal.Models.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserID");

                    b.Navigation("User");
                });

            modelBuilder.Entity("IBBPortal.Models.RelationType", b =>
                {
                    b.HasOne("IBBPortal.Models.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserID");

                    b.Navigation("User");
                });

            modelBuilder.Entity("IBBPortal.Models.ServiceArea", b =>
                {
                    b.HasOne("IBBPortal.Models.ServiceArea", "ParentServiceArea")
                        .WithMany()
                        .HasForeignKey("ParentServiceAreaID");

                    b.HasOne("IBBPortal.Models.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserID");

                    b.Navigation("ParentServiceArea");

                    b.Navigation("User");
                });

            modelBuilder.Entity("IBBPortal.Models.Subfunction", b =>
                {
                    b.HasOne("IBBPortal.Models.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserID");

                    b.Navigation("User");
                });

            modelBuilder.Entity("IBBPortal.Models.SubfunctionFeature", b =>
                {
                    b.HasOne("IBBPortal.Models.Subfunction", "Subfunction")
                        .WithMany("RelatedSubfunctionFeatures")
                        .HasForeignKey("SubfunctionID");

                    b.HasOne("IBBPortal.Models.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserID");

                    b.Navigation("Subfunction");

                    b.Navigation("User");
                });

            modelBuilder.Entity("IBBPortal.Models.ZoningPlanModificationStatus", b =>
                {
                    b.HasOne("IBBPortal.Models.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserID");

                    b.Navigation("User");
                });

            modelBuilder.Entity("IBBPortal.Models.ZoningPlanStatus", b =>
                {
                    b.HasOne("IBBPortal.Models.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserID");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("IBBPortal.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("IBBPortal.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IBBPortal.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("IBBPortal.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("IBBPortal.Models.City", b =>
                {
                    b.Navigation("RelatedContractors");

                    b.Navigation("RelatedDistricts");
                });

            modelBuilder.Entity("IBBPortal.Models.Contractor", b =>
                {
                    b.Navigation("RelatedPeople");
                });

            modelBuilder.Entity("IBBPortal.Models.ContractorType", b =>
                {
                    b.Navigation("RelatedContractors");
                });

            modelBuilder.Entity("IBBPortal.Models.Department", b =>
                {
                    b.Navigation("RelatedPeople");
                });

            modelBuilder.Entity("IBBPortal.Models.District", b =>
                {
                    b.Navigation("RelatedContractors");
                });

            modelBuilder.Entity("IBBPortal.Models.JobTitle", b =>
                {
                    b.Navigation("RelatedPeople");
                });

            modelBuilder.Entity("IBBPortal.Models.Person", b =>
                {
                    b.Navigation("RelatedProjects");
                });

            modelBuilder.Entity("IBBPortal.Models.ProjectImportance", b =>
                {
                    b.Navigation("RelatedProjects");
                });

            modelBuilder.Entity("IBBPortal.Models.ProjectStatus", b =>
                {
                    b.Navigation("RelatedProjects");
                });

            modelBuilder.Entity("IBBPortal.Models.ServiceArea", b =>
                {
                    b.Navigation("RelatedProjects");
                });

            modelBuilder.Entity("IBBPortal.Models.Subfunction", b =>
                {
                    b.Navigation("RelatedSubfunctionFeatures");
                });
#pragma warning restore 612, 618
        }
    }
}
